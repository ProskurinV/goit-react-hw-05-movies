{"version":3,"file":"static/js/153.6f4d5193.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","components/movieDatabaseApi.js","components/Searchbar/SearchBar.styled.js","components/Searchbar/SearchBar.js","components/RenderFilms/RenderSearchFilms.styled.js","components/RenderFilms/RenderSearchFilms.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { FallingLines } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderWrapper>\n      <FallingLines\n        color=\"red\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </LoaderWrapper>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst paramsTraiding = 'trending/movie/day?';\nconst SEARCH_URL = 'search/movie?';\n\nconst API_KEY = 'api_key=07a0b7347da6bb0b9ce66f00964e6e58';\nconst lang = 'language=en-US';\n\nexport async function fetchTraidingFilms() {\n  const response = await axios.get(`${BASE_URL}${paramsTraiding}${API_KEY}`);\n\n  return response.data;\n}\n\nexport async function fetchFilmsById(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}?${lang}&${API_KEY}`);\n\n  return response.data;\n}\n\nexport async function fetchSearchFilms(query) {\n  const response = await axios.get(\n    `${BASE_URL}${SEARCH_URL}&query=${query}&${API_KEY}`\n  );\n\n  return response.data;\n}\n\nexport async function fetchFilmsCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?${lang}&${API_KEY}`\n  );\n\n  return response.data;\n}\n\nexport async function fetchFilmsReview(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?${lang}&${API_KEY}`\n  );\n\n  return response.data;\n}\n","import styled from 'styled-components';\n\nimport { Form, Field } from 'formik';\n\nexport const Search = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 30px;\n  flex-direction: column;\n`;\n\nexport const FormEl = styled(Form)`\n  position: relative;\n  width: 200px;\n  align-self: center;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 20px;\n  outline: none;\n  color: black;\n\n  border: none;\n  border-radius: 4px;\n\n  background-color: lightskyblue;\n  border-bottom: 0.5px solid #f7f7f7;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    display: flex;\n    align-items: center;\n\n    color: black;\n  }\n`;\n\nexport const BtnSearch = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { Search, FormEl, Input, BtnSearch } from './SearchBar.styled';\nimport { Outlet } from 'react-router-dom';\n\nexport default function SearchBar({ onSubmit }) {\n  const handleSubmit = async (values, actions) => {\n    await onSubmit(values);\n\n    actions.setSubmitting(false);\n    actions.resetForm();\n  };\n  return (\n    <Search as=\"main\">\n      <Formik initialValues={{ query: '' }} onSubmit={handleSubmit}>\n        {({ isSubmitting }) => (\n          <FormEl>\n            <BtnSearch type=\"submit\" disabled={isSubmitting}>\n              <AiOutlineSearch size={20} />\n            </BtnSearch>\n            <Input\n              name=\"query\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search movies\"\n            />\n          </FormEl>\n        )}\n      </Formik>\n      <Outlet />\n    </Search>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  justify-content: center;\n  max-width: calc(100vw - 48px);\n\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const FilmCard = styled.div`\n  width: 280px;\n  // height: 438px;\n  padding-bottom: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px 0px #00000040;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 4px 4px 0px #00000040;\n    transition: 0.5s ease all;\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 395px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  border-radius: 5px;\n  margin-bottom: 8px;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-weight: 20px;\n  line-height: 1.17;\n  text-transform: uppercase;\n  color: #000000;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.3;\n  }\n  @media screen and (min-width: 1280px) {\n    line-height: 1.2;\n    font-size: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport SearchBar from 'components/Searchbar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Loader from 'components/Loader';\nimport { fetchSearchFilms } from 'components/movieDatabaseApi';\nimport {\n  MovieList,\n  FilmCard,\n  Img,\n  MovieTitle,\n} from './RenderSearchFilms.styled';\nimport images from '../../images/images.jpg';\n\nexport default function RenderSearchFilms() {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function fetchImg(query) {\n      try {\n        setIsLoading(true);\n\n        const response = await fetchSearchFilms(query);\n        const films = response.results;\n        const total = response.total_results;\n\n        if (total === 0) {\n          toast.error(\n            'Sorry, there are no movies matching your query. Please try again.'\n          );\n          return;\n        }\n\n        setSearchMovies(films);\n      } catch {\n        setError('Can`t load movies!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchImg(query);\n  }, [query, searchMovies.length]);\n\n  useEffect(() => {\n    if (error !== false) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  const handlerFormSubmit = values => {\n    if (query !== values.query.trim()) {\n      setSearchMovies([]);\n      setQuery(values.query.trim());\n      setError(false);\n      setIsLoading(false);\n    }\n  };\n  console.log(location);\n\n  return (\n    <main>\n      <SearchBar onSubmit={handlerFormSubmit} />\n      {isLoading && <Loader />}\n      <MovieList>\n        {searchMovies.map(({ poster_path, title, id }) => (\n          <NavLink key={id} to={`${id}`} state={{ from: location }}>\n            <FilmCard>\n              {poster_path ? (\n                <Img src={IMG_URL + poster_path} alt={title} />\n              ) : (\n                <Img src={images} alt={title} />\n              )}\n\n              <MovieTitle> {title}</MovieTitle>\n            </FilmCard>\n          </NavLink>\n        ))}\n        <Outlet />\n        <Toaster />\n      </MovieList>\n    </main>\n  );\n}\n\nRenderSearchFilms.propTypes = {\n  searchMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const MainSection = styled.div`\n  padding-top: 20px;\n  padding-bottom: 40px;\n`;\n","// import PropTypes from 'prop-types';\n\nimport RenderSearchFilms from 'components/RenderFilms/RenderSearchFilms';\nimport { MainSection } from './Movies.styled';\n\nexport default function Movies() {\n  return (\n    <MainSection>\n      <RenderSearchFilms />\n    </MainSection>\n  );\n}\n"],"names":["LoaderWrapper","styled","Loader","color","width","visible","ariaLabel","BASE_URL","paramsTraiding","SEARCH_URL","API_KEY","lang","fetchTraidingFilms","axios","response","data","fetchFilmsById","id","fetchSearchFilms","query","fetchFilmsCast","fetchFilmsReview","Search","FormEl","Form","Input","Field","BtnSearch","SearchBar","onSubmit","handleSubmit","values","actions","setSubmitting","resetForm","as","initialValues","isSubmitting","type","disabled","size","name","autoComplete","autoFocus","placeholder","MovieList","FilmCard","Img","MovieTitle","RenderSearchFilms","useState","searchMovies","setSearchMovies","setQuery","error","setError","isLoading","setIsLoading","location","useLocation","useEffect","films","results","total_results","toast","fetchImg","length","console","log","trim","map","poster_path","title","to","state","from","src","alt","images","MainSection","Movies"],"sourceRoot":""}